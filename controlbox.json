{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "VER 2014.10.08.12.00 MALO Application stack. Provisions:  30 Application subnets, 10 security groups, 3 internal ELBs, 3 Auto Scaling Groups, 3 LaunchConfigurations.",
  
  "Parameters" : {
    "VpcId": {
      "Type": "String",
      "AllowedPattern": "vpc-[a-f0-9]{8}", 
      "ConstraintDescription": "Must be valid VPC identifier vpc-xxxxxxxx", 
      "Description": "The ID of the VPC this Application stack will be launched in."
    },
    "Env" : {
      "Type" : "String",
      "AllowedValues" : ["dev", "ci", "tst", "snd"],
      "Default" : "dev",
      "Description" : "The Environment type to provision e.g. dev.",
      "ConstraintDescription" : "Specify an environment to provision e.g. dev for development environment."
    },
    "VpgId" : {
      "Type" : "String",
      "AllowedPattern": "vgw-[a-f0-9]{8}",
      "ConstraintDescription": "Must be valid VPC identifier vgw-xxxxxxxx", 
      "Description": "The ID of the VPC this Application stack will be launched in."
    },
    "IgwId" : {
      "Type" : "String",
      "AllowedPattern": "igw-[a-f0-9]{8}",
      "ConstraintDescription": "Must be valid IGW identifier igw-xxxxxxxx", 
      "Description": "The ID of the Internet Gateway."
    },
    "KeyName" : {
      "Type" : "String",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "MinLength" : "1",
      "MaxLength" : "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "Must contain only alphanumeric characters, spaces, dashes and underscores."
    },    
    "WindowsSG": {
      "Type": "String", 
      "AllowedPattern": "sg-[a-f0-9]{8}", 
      "ConstraintDescription": "Must be valid security group identifier sg-xxxxxxxx", 
      "Description": "A Security Group ID for Generic Windows hosts"
    },
    "LinuxSG": {
      "Type": "String",
      "AllowedPattern": "sg-[a-f0-9]{8}", 
      "ConstraintDescription": "Must be valid security group identifier sg-xxxxxxxx", 
      "Description": "A Security Group ID for Generic Linux hosts"
    },
    "DBPassword": { 
      "NoEcho": "true",
      "Type": "String",
      "MinLength": "8", 
      "Description": "Master account password for RDS database",       
      "ConstraintDescription": "Must specify a password for the RDS master account"
    }    
  },  
  "Mappings": { 
    "NATRegionalAMI" : {
      "eu-west-1" : { "AMI" : "ami-e5e2d991" }
    },    
    "APPRegionalAMI" : {
      "eu-west-1" : { "AMI" : "ami-cae63fbd" }
    },        
    "WEBRegionalAMI" : {
      "eu-west-1" : { "AMI" : "ami-0aee377d" }
    }
  },    
  
  "Resources": {                   

    "KeyInstanceA" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : "m3.medium",        
        "SubnetId" : {"Ref" : "KeyApiNetZoneA"},
        "ImageId" : {"Fn::FindInMap" : ["WEBRegionalAMI", {"Ref" : "AWS::Region"}, "AMI"]},
        "KeyName" : {"Ref" : "KeyName"},
        "SecurityGroupIds" : [ { "Ref" : "WindowsSG" } ],                        
        "Tags" : [      
          { "Key" : "Name", "Value" : { "Fn::Join" : [ "", [ { "Ref" : "AWS::StackName" } , "KeyServer" ] ] } }
        ] 
      }
    }
  },
  "Outputs" : {
    "UIUri" : {      
       "Value" : { "Fn::Join" : [ "", [ "https://", { "Ref" : "UiAppCNAME" } ] ] }
    },   
    "CoreAPIUri" : {      
       "Value" : { "Fn::Join" : [ "", [ "https://", { "Ref" : "CoreApiCNAME" } , "/v1" ] ] }
    },  
    "KeyAPIUri" : {
       "Value" : { "Fn::Join" : [ "", [ "https://", { "Ref" : "KeyApiCNAME" }, "/keyapi" ] ] }
    }
  }
}