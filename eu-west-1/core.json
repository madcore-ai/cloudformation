{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "MadCore, Ubuntu Xenial Base plus tools like Jenkins, Habitat, Docker, HAProxy, Kubernetes, SSL Self-generated cert.",
  "Parameters": {
    "KeyName": {
      "Type": "String",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "Must contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "InstanceType": {
      "Description": "EC2 PV instance type (m3.medium, etc). Note: m1.small is not supported.",
      "Type": "String",
      "Default": "t2.small",
      "AllowedValues": [
        "t2.small",
        "m3.medium",
        "m4.large",
        "r3.large"
      ],
      "ConstraintDescription": "Must be a valid EC2 PV instance type. Note: m1.small is not supported."
    },
    "FollowmeSecurityGroup": {
      "Type": "String",
      "AllowedPattern": "sg-[a-f0-9]{8}",
      "ConstraintDescription": "Must be valid security group identifier sg-xxxxxxxx",
      "Description": "MadCore Follow Me Security Group"
    },
    "PublicNetZoneA": {
      "Type": "String",
      "AllowedPattern": "subnet-[a-f0-9]{8}",
      "ConstraintDescription": "Must be valid security group identifier sg-xxxxxxxx",
      "Description": "MadCore Public Subnet Zone A"
    }
  },
  "Mappings": {
    "UbuntuXenialAMI": {
      "us-west-1": {
        "AMI": "ami-b20542d2"
      },
      "us-east-1": {
        "AMI": "ami-ddf13fb0"
      },
      "eu-west-1": {
        "AMI": "ami-a4d44ed7"
      }
    }
  },
  "Resources": {
    "MadcoreS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "AuthenticatedRead"
      },
      "DeletionPolicy": "Delete"
    },
    "MadCoreInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {"Ref": "InstanceType"},
        "ImageId": {
          "Fn::FindInMap": [
            "UbuntuXenialAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "30"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile": {
          "Ref": "IamMadCoreInstanceProfile"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            }
          }
        ],
        "UserData": {
          "Fn::Join": [
            "",
            [
              "IyEvYmluL2Jhc2ggLXYNCiMgIDIwMTYgTWFkY29yZSBMdGQgKGMpDQojIE1haW50YWluZWQgYnkgUGV0",
              "ZXIgU3R5ayAoZGV2b3BzZmFjdG9yeUBzdHlrLnR2KQ0KDQpzdWRvIGVjaG8gRU5WPUFXUyA+PiAvZXRj",
              "L2Vudmlyb25tZW50DQoNCiMgUFJFQ09ORklHVVJFIG1hZGNvcmUNCnN1ZG8gYXB0LWdldCB1cGRhdGUN",
              "CnN1ZG8gYXB0LWdldCBpbnN0YWxsIGdpdCAteQ0Kc3VkbyBta2RpciAtcCAvb3B0L21hZGNvcmUNCnN1",
              "ZG8gY2hvd24gdWJ1bnR1OnVidW50dSAvb3B0L21hZGNvcmUNCmdpdCBjbG9uZSBodHRwczovL2dpdGh1",
              "Yi5jb20vbWFkY29yZS1haS9jb3JlLmdpdCAvb3B0L21hZGNvcmUNCnN1ZG8gY2htb2QgK3ggL29wdC9t",
              "YWRjb3JlL2NvcmUtaW5zdGFsbC5zaA0Kc3VkbyAiL29wdC9tYWRjb3JlL2NvcmUtaW5zdGFsbC5zaCIN",
              "Cg=="
            ]
          ]
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": true,
            "DeleteOnTermination": true,
            "DeviceIndex": "0",
            "SubnetId": {
              "Ref": "PublicNetZoneA"
            },
            "GroupSet": [
              {
                "Ref": "FollowmeSecurityGroup"
              }
            ]
          }
        ]
      }
    },
    "MadCoreEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "MadCoreEIPAssoc": {
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MadCoreEIP",
            "AllocationId"
          ]
        },
        "InstanceId": {
          "Ref": "MadCoreInstance"
        }
      }
    },
    "IamMadCoreRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "policy-madcore",
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:DescribeTags",
                    "ec2:StartInstances",
                    "ec2:StopInstances"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectAcl",
                    "s3:PutObject",
                    "s3:PutObjectAcl"
                  ],
                  "Resource": [
                    {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "MadcoreS3Bucket"}]]},
                    {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "MadcoreS3Bucket"}, "/*"]]}
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "IamMadCoreInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "IamMadCoreRole"
          }
        ]
      }
    }
  },
  "Outputs": {
    "S3BucketName": {
      "Value": {
        "Ref": "MadcoreS3Bucket"
      },
      "Description": "Name of the Amazon S3 bucket."
    },
    "MadCorePublicIp": {
      "Value": {
        "Fn::GetAtt": [
          "MadCoreInstance",
          "PublicIp"
        ]
      }
    },
    "MadCorePublicDnsName": {
      "Value": {
        "Fn::GetAtt": [
          "MadCoreInstance",
          "PublicDnsName"
        ]
      }
    },
    "MadCoreInstanceId": {
      "Value": {
        "Ref": "MadCoreInstance"
      }
    }
  }
}
