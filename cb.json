{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Devops Factory Control Box, Ubuntu Trusty Base plus tools like Jenkins, Habitat, Docker, HAProxy, SSL Self-generated cert.",
    "Parameters": {
        "KeyName": {
            "Type": "String",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[-_ a-zA-Z0-9]*",
            "ConstraintDescription": "Must contain only alphanumeric characters, spaces, dashes and underscores."
        },
        "FollowmeSecurityGroup": {
            "Type": "String",
            "AllowedPattern": "sg-[a-f0-9]{8}",
            "ConstraintDescription": "Must be valid security group identifier sg-xxxxxxxx",
            "Description": "Devops Factory Follow Me Security Group"
        },
        "PublicNetZoneA": {
            "Type": "String",
            "AllowedPattern": "subnet-[a-f0-9]{8}",
            "ConstraintDescription": "Must be valid security group identifier sg-xxxxxxxx",
            "Description": "Devops Factory Public Subnet Zone A"
        }
    },
    "Mappings": {
        "UbuntuTrustyAMI": {
            "eu-west-1": {
                "AMI": "ami-f95ef58a"
            }
        }
    },
    "Resources": {
        "ControlBoxInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "InstanceType": "t2.small",
                "ImageId": {
                    "Fn::FindInMap": [
                        "UbuntuTrustyAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "IamInstanceProfile" : { "Ref" : "IamDevopsFactoryInstanceProfile" },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "KeyServer"
                                ]
                            ]
                        }
                    }
                ],
                "UserData" : { "Fn::Join" : ["", [
                    "IyEvYmluL2Jhc2ggLXYNCiMgVWJ1bnR1IFRydXN0eSBJbml0aWFsaXphdGlvbiBmcm9tIENsb3VkLUlu",
                    "aXQNCiMgRnJvbSBVYnVudHUgdXNlcg0KDQojIFBSRVJFUVVFU0lURVMNCnB1c2hkIC90bXANCiAgICBz",
                    "dWRvIHdnZXQgLXEgLU8gLSBodHRwczovL2plbmtpbnMtY2kub3JnL2RlYmlhbi9qZW5raW5zLWNpLm9y",
                    "Zy5rZXkgfCBzdWRvIGFwdC1rZXkgYWRkIC0NCiAgICBzdWRvIHNoIC1jICdlY2hvIGRlYiBodHRwOi8v",
                    "cGtnLmplbmtpbnMtY2kub3JnL2RlYmlhbi1zdGFibGUgYmluYXJ5LyA+IC9ldGMvYXB0L3NvdXJjZXMu",
                    "bGlzdC5kL2plbmtpbnMubGlzdCcNCiAgICBzdWRvIGFwdC1nZXQgdXBkYXRlDQogICAgc3VkbyBhcHQt",
                    "Z2V0IGluc3RhbGwgb3Blbmpkay03LWpkayBnaXQgamVua2lucyAteQ0KICAgIHN1ZG8gZ3JvdXBhZGQg",
                    "aGFiICYmIHVzZXJhZGQgLWcgaGFiIC1zIC9iaW4vYmFzaCAtbSBoYWINCiAgICBzdWRvIHVzZXJtb2Qg",
                    "LWFHIGRvY2tlciBqZW5raW5zDQogICAgc3VkbyB1c2VybW9kIC1hRyBkb2NrZXIgaGFiDQogICAgc3Vk",
                    "byBjdXJsIC1mc1NMIGh0dHBzOi8vZ2V0LmRvY2tlci5jb20vIHwgc2gNCiAgICBzdWRvIGN1cmwgLUwg",
                    "aHR0cHM6Ly9naXRodWIuY29tL2RvY2tlci9jb21wb3NlL3JlbGVhc2VzL2Rvd25sb2FkLzEuNy4xL2Rv",
                    "Y2tlci1jb21wb3NlLWB1bmFtZSAtc2AtYHVuYW1lIC1tYCA+IC91c3IvbG9jYWwvYmluL2RvY2tlci1j",
                    "b21wb3NlDQogICAgc3VkbyBjdXJsIC1zU2YgaHR0cHM6Ly9zdGF0aWMucnVzdC1sYW5nLm9yZy9ydXN0",
                    "dXAuc2ggfCBzaA0KcG9wZA0KDQojIEhBQklUQVQNCnN1ZG8gc3UgLWMgIm1rZGlyIC1wIC92YXIvbGli",
                    "L2plbmtpbnMvZ2l0L2hhYml0YXQiIGplbmtpbnMNCnN1ZG8gc3UgLWMgImdpdCBjbG9uZSBodHRwczov",
                    "L2dpdGh1Yi5jb20vaGFiaXRhdC1zaC9oYWJpdGF0IC92YXIvbGliL2plbmtpbnMvZ2l0L2hhYml0YXQi",
                    "IGplbmtpbnMNCnN1ZG8gc3UgLWMgIi92YXIvbGliL2plbmtpbnMvZ2l0L2hhYml0YXQvY29tcG9uZW50",
                    "cy9oYWIvaW5zdGFsbC5zaCIgDQoNCiMgSkVOS0lOUyBQTFVHSU5TDQpzdWRvIHN1IC1jICJqYXZhIC1q",
                    "YXIgL3Zhci9jYWNoZS9qZW5raW5zL3dhci9XRUItSU5GL2plbmtpbnMtY2xpLmphciAtcyBodHRwOi8v",
                    "MTI3LjAuMC4xOjgwODAgaW5zdGFsbC1wbHVnaW4gZ2l0IC1kZXBsb3kiIGplbmtpbnMNCnN1ZG8gc3Ug",
                    "LWMgImphdmEgLWphciAvdmFyL2NhY2hlL2plbmtpbnMvd2FyL1dFQi1JTkYvamVua2lucy1jbGkuamFy",
                    "IC1zIGh0dHA6Ly8xMjcuMC4wLjE6ODA4MCBpbnN0YWxsLXBsdWdpbiBzc2gtY3JlZGVudGlhbHMiIGpl",
                    "bmtpbnMNCnN1ZG8gc3UgLWMgImphdmEgLWphciAvdmFyL2NhY2hlL2plbmtpbnMvd2FyL1dFQi1JTkYv",
                    "amVua2lucy1jbGkuamFyIC1zIGh0dHA6Ly8xMjcuMC4wLjE6ODA4MCBpbnN0YWxsLXBsdWdpbiBqb2It",
                    "ZHNsIC1kZXBsb3kiIGplbmtpbnMNCg0KIyBDT05GSUdVUkUgQU5EIFJVTiAxU1QgU0VFRCBKT0IgKFdJ",
                    "TEwgQ1JFQVRFIEFMTCBPVEhFUiBKT0JTIEZST00gUkVQTykNCnN1ZG8gc3UgLWMgIm1rZGlyIC1wIC92",
                    "YXIvbGliL2plbmtpbnMvam9icy9zZWVkLWRzbCIgamVua2lucw0Kc3VkbyBzdSAtYyAibWtkaXIgLXAg",
                    "L3Zhci9saWIvamVua2lucy93b3Jrc3BhY2Uvc2VlZC1kc2wvY29udHJvbGJveCIgamVua2lucw0Kc3Vk",
                    "byBzdSAtYyAiZ2l0IGNsb25lIGh0dHBzOi8vYml0YnVja2V0Lm9yZy9yb25hYW5pbWF0aW9uL2NvbnRy",
                    "b2xib3guZ2l0IC92YXIvbGliL2plbmtpbnMvd29ya3NwYWNlL3NlZWQtZHNsL2NvbnRyb2xib3giIGpl",
                    "bmtpbnMNCnN1ZG8gc3UgLWMgImNwIC92YXIvbGliL2plbmtpbnMvd29ya3NwYWNlL3NlZWQtZHNsL2Nv",
                    "bnRyb2xib3gvc2VlZC1kbHNfY29uZmlnLnhtbCAvdmFyL2xpYi9qZW5raW5zL2pvYnMvc2VlZC1kc2wv",
                    "Y29uZmlnLnhtbCIgamVua2lucw0Kc3VkbyBzZXJ2aWNlIGplbmtpbnMgcmVzdGFydA0Kc3VkbyBzdSAt",
                    "YyAidW50aWwgY3VybCAtc0wgLXcgJyV7aHR0cF9jb2RlfScgJ2h0dHA6Ly8xMjcuMC4wLjE6ODA4MC9j",
                    "bGkvJyAtbyAvZGV2L251bGwgfCBncmVwIC1tIDEgJzIwMCc7IGRvIDogOyBkb25lIiBqZW5raW5zDQpz",
                    "dWRvIHN1IC1jICJqYXZhIC1qYXIgL3Zhci9jYWNoZS9qZW5raW5zL3dhci9XRUItSU5GL2plbmtpbnMt",
                    "Y2xpLmphciAtcyBodHRwOi8vMTI3LjAuMC4xOjgwODAgYnVpbGQgc2VlZC1kc2wiIGplbmtpbnM="
                ]]},
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": true,
                        "DeleteOnTermination": true,
                        "DeviceIndex": "0",
                        "SubnetId": {
                    "Ref": "PublicNetZoneA"
                },
                        "GroupSet": [
                            {
                                "Ref": "FollowmeSecurityGroup"
                            }
                        ]
                    }
                ]
            }
        },
        
        "IamDevopsFactoryRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Statement": [ 
                { "Effect": "Allow", 
                  "Principal": {
                    "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
                }
              ]
            },        
            "Path": "/",
            "Policies": [
              { "PolicyName" :  "policy-df-controlbox",
                "PolicyDocument": { 
                  "Statement": [                
                    {
                      "Action": [ "ec2:DescribeTags","ec2:StartInstances","ec2:StopInstances"],
                      "Effect": "Allow",      
                      "Resource": ["*"]
                    }               
                  ]
                }
              }
            ]
          }
        },
        
        "IamDevopsFactoryInstanceProfile": {
          "Type": "AWS::IAM::InstanceProfile",
          "Properties": {
            "Path": "/",
            "Roles": [ { "Ref": "IamDevopsFactoryRole" } ]
          }
        }     
        
        
    },
    "Outputs": {
        "ControlBoxPublicIp": {
            "Value": {
                "Fn::GetAtt": [
                    "ControlBoxInstance",
                    "PublicIp"
                ]
            }
        },
        "ControlBoxInstanceId": {
            "Value": {
                "Ref": "ControlBoxInstance"
            }
        }
    }
}